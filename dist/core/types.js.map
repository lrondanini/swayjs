{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/core/types.ts"],"names":[],"mappings":";;;AAEA,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,yBAAW,CAAA;IACX,2BAAa,CAAA;IACb,yBAAW,CAAA;IACX,+BAAiB,CAAA;IACjB,iCAAmB,CAAA;AACrB,CAAC,EANW,UAAU,0BAAV,UAAU,QAMrB;AAED,MAAa,OAAO;IAGlB;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,GAAG,CAAC,IAAY,EAAE,KAAU;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,GAAG,CAAC,IAAY;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;CAEF;AAnBD,0BAmBC","sourcesContent":["\n\nexport enum RestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  OPTIONS = 'OPTIONS',\n}\n\nexport class Context {\n  private props: { [name: string]: any };\n\n  constructor() {\n    this.props = {};\n  }\n\n  add(name: string, value: any) {\n    this.props[name] = value;\n  }\n\n  remove(name: string) {\n    delete this.props[name];\n  }\n\n  get(name: string) {\n    return this.props[name];\n  }\n\n}\n"]}