{"version":3,"file":"exceptions.js","sourceRoot":"","sources":["../../src/core/exceptions.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServerResponse } from \"http\";\n\n\nenum ErrorType {\n  HttpVersionNotSupported = 'HttpVersionNotSupported',\n  PayloadTooLarge = 'PayloadTooLarge',\n  UnsupportedMediaType = 'UnsupportedMediaType',\n  UnprocessableEntity = 'UnprocessableEntity',\n  InternalServerError = 'InternalServerError',\n  Unauthorized = 'Unauthorized',\n  NotFound = 'NotFound',\n  NotImplemented = 'NotImplemented',\n  GatewayTimeout = 'GatewayTimeout',\n  PreconditionFailed = 'PreconditionFailed',\n  BadRequest = 'BadRequest',    \n  Forbidden = 'Forbidden',\n  NotAcceptable = 'NotAcceptable',\n  ImATeapot = 'ImATeapot',\n  MethodNotAllowed = 'MethodNotAllowed',\n  BadGateway = 'BadGateway',\n  ServiceUnavailable = 'ServiceUnavailable',\n  RequestTimeout = 'RequestTimeout',\n  Conflict = 'Conflict',\n  Gone = 'Gone',  \n}\n\nclass HttpException {  \n  private errorType:  ErrorType;\n  private message: string;\n  private description?: string;\n  private errorCode: number;\n\n  constructor(et: ErrorType, message: string, description?: string) {\n    this.errorType = et;\n    this.message = message;\n    this.description  = description;\n    this.errorCode = this.findCode();\n  }\n\n  private findCode() {\n    switch(this.errorType) {\n      case ErrorType.BadRequest: return 400;\n      case ErrorType.Unauthorized: return 401;\n      case ErrorType.Forbidden: return 403;\n      case ErrorType.NotFound: return 404;\n      case ErrorType.MethodNotAllowed: return 405;\n      case ErrorType.NotAcceptable: return 406;\n      case ErrorType.RequestTimeout: return 408;\n      case ErrorType.Conflict: return 409;\n      case ErrorType.Gone: return 410;\n      case ErrorType.PreconditionFailed: return 412;\n      case ErrorType.PayloadTooLarge: return 413;\n      case ErrorType.UnsupportedMediaType: return 415;\n      case ErrorType.ImATeapot: return 418;\n      case ErrorType.UnprocessableEntity: return 422;\n      case ErrorType.InternalServerError: return 500;\n      case ErrorType.NotImplemented: return 501;\n      case ErrorType.BadGateway: return 502;\n      case ErrorType.ServiceUnavailable: return 503;\n      case ErrorType.GatewayTimeout: return 504;\n      case ErrorType.HttpVersionNotSupported: return 505;\n    }\n  }\n\n  send(res: ServerResponse) {\n    res.statusCode = this.errorCode;\n    res.end(JSON.stringify({ error: this.message, description: this.description }));\n  }\n}\n\nexport class BadRequestException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.BadRequest, message, description);\n  }\n}\n\nexport class UnauthorizedException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.Unauthorized, message, description);\n  }\n}\n\nexport class ForbiddenException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.Forbidden, message, description);\n  }\n}\n\nexport class NotFoundException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.NotFound, message, description);\n  }\n}\n\nexport class MethodNotAllowedException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.MethodNotAllowed, message, description);\n  }\n}\n\n\nexport class NotAcceptableException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.NotAcceptable, message, description);\n  }\n}\n\nexport class RequestTimeoutException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.RequestTimeout, message, description);\n  }\n}\n\nexport class BadGatewayException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.BadGateway, message, description);\n  }\n}\n\nexport class ServiceUnavailableException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.ServiceUnavailable, message, description);\n  }\n}\n\nexport class ConflictException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.Conflict, message, description);\n  }\n}\n\nexport class GoneException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.Gone, message, description);\n  }\n}\n\n\nexport class UnsupportedMediaTypeException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.UnsupportedMediaType, message, description);\n  }\n}\n\nexport class UnprocessableEntityException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.UnprocessableEntity, message, description);\n  }\n}\n\nexport class HttpVersionNotSupportedException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.HttpVersionNotSupported, message, description);\n  }\n}\n\nexport class PayloadTooLargeException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.PayloadTooLarge, message, description);\n  }\n}\n\nexport class InternalServerErrorException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.InternalServerError, message, description);\n  }\n}\n\nexport class NotImplementedException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.NotImplemented, message, description);\n  }\n}\n\nexport class ImATeapotException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.ImATeapot, message, description);\n  }\n}\n\nexport class GatewayTimeoutException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.GatewayTimeout, message, description);\n  }\n}\n\nexport class PreconditionFailedException extends HttpException {\n  constructor(message: string, description?: string) {\n    super(ErrorType.PreconditionFailed, message, description);\n  }\n}\n"]}